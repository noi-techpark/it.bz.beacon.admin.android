// SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

/*
 * Beacon Suedtirol API
 * The API for the Beacon Suedtirol project for configuring beacons and accessing beacon data.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.bz.beacon.adminapp.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GroupAssignment
 */

public class GroupAssignment {
  @SerializedName("user")
  private Long user = null;

  /**
   * Gets or Sets userRole
   */
  @JsonAdapter(UserRoleEnum.Adapter.class)
  public enum UserRoleEnum {
    MANAGER("MANAGER"),
    
    BEACON_EDITOR("BEACON_EDITOR"),
    
    BEACON_VIEWER("BEACON_VIEWER");

    private String value;

    UserRoleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UserRoleEnum fromValue(String text) {
      for (UserRoleEnum b : UserRoleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<UserRoleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UserRoleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UserRoleEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return UserRoleEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("userRole")
  private UserRoleEnum userRole = null;

  public GroupAssignment user(Long user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getUser() {
    return user;
  }

  public void setUser(Long user) {
    this.user = user;
  }

  public GroupAssignment userRole(UserRoleEnum userRole) {
    this.userRole = userRole;
    return this;
  }

   /**
   * Get userRole
   * @return userRole
  **/
  @ApiModelProperty(required = true, value = "")
  public UserRoleEnum getUserRole() {
    return userRole;
  }

  public void setUserRole(UserRoleEnum userRole) {
    this.userRole = userRole;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupAssignment groupAssignment = (GroupAssignment) o;
    return Objects.equals(this.user, groupAssignment.user) &&
        Objects.equals(this.userRole, groupAssignment.userRole);
  }

  @Override
  public int hashCode() {
    return Objects.hash(user, userRole);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupAssignment {\n");
    
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userRole: ").append(toIndentedString(userRole)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

